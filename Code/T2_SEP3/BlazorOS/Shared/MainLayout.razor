@using HttpClients.ClientInterfaces
@using global::Shared.Models
@using global::Shared.DTOs
@inherits LayoutComponentBase
@inject NavigationManager NavManager
@inject IUserService authService
@inject IShoppingCartService ShoppingCartService

<div class="page">
    <div class="sidebar">
        <NavMenu/>
    </div>

    <main>
        <div class="top-row px-4">
           
             <AuthorizeView>
                <Authorized>
                    <img style="width: 40px" src="https://cdn-icons-png.flaticon.com/128/1077/1077114.png" @onclick="Profile"/>
                    <img  style="width: 44px; float: right" src="https://static.thenounproject.com/png/1709580-200.png"  @onclick="() => { int customerId= Int32.Parse(context.User.FindFirst(claimString).Value); ShoppingCartRegistered(customerId); }"/>
                    <img style="width: 44px" src="https://static.thenounproject.com/png/1251649-200.png" @onclick="Logout"/>
                </Authorized>
                 <NotAuthorized>
                      <img  style="width: 44px; float: right" src="https://static.thenounproject.com/png/1709580-200.png" @onclick="ShoppingCart"/>
                      <img style="width: 44px" src="https://static.thenounproject.com/png/1401845-200.png" @onclick="Login"/>
                 </NotAuthorized>
            </AuthorizeView>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>



@code {
    
    private string claimString= "Id";
    private bool addedSomething= false;
   

           
    private void Login()
    {
        NavManager.NavigateTo("/Login");
    }
    

    private async Task Logout()
    {
        await authService.LogoutAsync();
        NavManager.NavigateTo("/");
    }
    private void Profile()
    {
        NavManager.NavigateTo("/Profile");
    }

    private void ShoppingCart()
    {
        if (!addedSomething)
        {
            addedSomething = true;
            Console.WriteLine("clear shopping cart!!!!!!!");
            
            NavManager.NavigateTo("ShoppingCart/4");
        }
        else
        {
            Console.WriteLine("not clear");
            NavManager.NavigateTo("ShoppingCart/4");
        }
    }

    private async Task ShoppingCartRegistered(int customerId)
    {
      ShoppingCart sc= await ShoppingCartService.getByUserIdAsync(customerId);
        if (sc==null)
        {
            CreateShoppingCartDto dto= new CreateShoppingCartDto(customerId);
            sc = await ShoppingCartService.CreateAsync(dto);
        }
        NavManager.NavigateTo($"/ShoppingCart/{sc.Id}");
    }

}