// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/addressComunicator.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

public static partial class AddressAndUserGrpc
{
  static readonly string __ServiceName = "AddressAndUserGrpc";

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (message is global::Google.Protobuf.IBufferMessage)
    {
      context.SetPayloadLength(message.CalculateSize());
      global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
      context.Complete();
      return;
    }
    #endif
    context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static class __Helper_MessageCache<T>
  {
    public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (__Helper_MessageCache<T>.IsBufferMessage)
    {
      return parser.ParseFrom(context.PayloadAsReadOnlySequence());
    }
    #endif
    return parser.ParseFrom(context.PayloadAsNewBuffer());
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::IntReqAddress> __Marshaller_IntReqAddress = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntReqAddress.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::address> __Marshaller_address = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::address.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::EmptyAddressMessage> __Marshaller_EmptyAddressMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EmptyAddressMessage.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::addressUpdateMessage> __Marshaller_addressUpdateMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::addressUpdateMessage.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::StringMessageAddress> __Marshaller_StringMessageAddress = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StringMessageAddress.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::loginMessage> __Marshaller_loginMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::loginMessage.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::user> __Marshaller_user = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::user.Parser));

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::IntReqAddress, global::address> __Method_GetAddressById = new grpc::Method<global::IntReqAddress, global::address>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetAddressById",
      __Marshaller_IntReqAddress,
      __Marshaller_address);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::address, global::address> __Method_CreateAddress = new grpc::Method<global::address, global::address>(
      grpc::MethodType.Unary,
      __ServiceName,
      "CreateAddress",
      __Marshaller_address,
      __Marshaller_address);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::EmptyAddressMessage, global::address> __Method_GetAllAddresses = new grpc::Method<global::EmptyAddressMessage, global::address>(
      grpc::MethodType.ServerStreaming,
      __ServiceName,
      "GetAllAddresses",
      __Marshaller_EmptyAddressMessage,
      __Marshaller_address);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::addressUpdateMessage, global::StringMessageAddress> __Method_UpdateAddress = new grpc::Method<global::addressUpdateMessage, global::StringMessageAddress>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateAddress",
      __Marshaller_addressUpdateMessage,
      __Marshaller_StringMessageAddress);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::IntReqAddress, global::address> __Method_GetAddressByUserId = new grpc::Method<global::IntReqAddress, global::address>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetAddressByUserId",
      __Marshaller_IntReqAddress,
      __Marshaller_address);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::loginMessage, global::user> __Method_RegisterUser = new grpc::Method<global::loginMessage, global::user>(
      grpc::MethodType.Unary,
      __ServiceName,
      "RegisterUser",
      __Marshaller_loginMessage,
      __Marshaller_user);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::loginMessage, global::StringMessageAddress> __Method_Login = new grpc::Method<global::loginMessage, global::StringMessageAddress>(
      grpc::MethodType.Unary,
      __ServiceName,
      "Login",
      __Marshaller_loginMessage,
      __Marshaller_StringMessageAddress);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::IntReqAddress, global::user> __Method_GetUserById = new grpc::Method<global::IntReqAddress, global::user>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetUserById",
      __Marshaller_IntReqAddress,
      __Marshaller_user);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::StringMessageAddress, global::user> __Method_GetUserByEmail = new grpc::Method<global::StringMessageAddress, global::user>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetUserByEmail",
      __Marshaller_StringMessageAddress,
      __Marshaller_user);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::user, global::user> __Method_UpdateUser = new grpc::Method<global::user, global::user>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateUser",
      __Marshaller_user,
      __Marshaller_user);

  /// <summary>Service descriptor</summary>
  public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
  {
    get { return global::AddressComunicatorReflection.Descriptor.Services[0]; }
  }

  /// <summary>Base class for server-side implementations of AddressAndUserGrpc</summary>
  [grpc::BindServiceMethod(typeof(AddressAndUserGrpc), "BindService")]
  public abstract partial class AddressAndUserGrpcBase
  {
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::address> GetAddressById(global::IntReqAddress request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::address> CreateAddress(global::address request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task GetAllAddresses(global::EmptyAddressMessage request, grpc::IServerStreamWriter<global::address> responseStream, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::StringMessageAddress> UpdateAddress(global::addressUpdateMessage request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::address> GetAddressByUserId(global::IntReqAddress request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::user> RegisterUser(global::loginMessage request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::StringMessageAddress> Login(global::loginMessage request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::user> GetUserById(global::IntReqAddress request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::user> GetUserByEmail(global::StringMessageAddress request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::user> UpdateUser(global::user request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

  }

  /// <summary>Client for AddressAndUserGrpc</summary>
  public partial class AddressAndUserGrpcClient : grpc::ClientBase<AddressAndUserGrpcClient>
  {
    /// <summary>Creates a new client for AddressAndUserGrpc</summary>
    /// <param name="channel">The channel to use to make remote calls.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public AddressAndUserGrpcClient(grpc::ChannelBase channel) : base(channel)
    {
    }
    /// <summary>Creates a new client for AddressAndUserGrpc that uses a custom <c>CallInvoker</c>.</summary>
    /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public AddressAndUserGrpcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
    {
    }
    /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected AddressAndUserGrpcClient() : base()
    {
    }
    /// <summary>Protected constructor to allow creation of configured clients.</summary>
    /// <param name="configuration">The client configuration.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected AddressAndUserGrpcClient(ClientBaseConfiguration configuration) : base(configuration)
    {
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::address GetAddressById(global::IntReqAddress request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetAddressById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::address GetAddressById(global::IntReqAddress request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetAddressById, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::address> GetAddressByIdAsync(global::IntReqAddress request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetAddressByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::address> GetAddressByIdAsync(global::IntReqAddress request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetAddressById, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::address CreateAddress(global::address request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return CreateAddress(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::address CreateAddress(global::address request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_CreateAddress, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::address> CreateAddressAsync(global::address request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return CreateAddressAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::address> CreateAddressAsync(global::address request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_CreateAddress, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncServerStreamingCall<global::address> GetAllAddresses(global::EmptyAddressMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetAllAddresses(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncServerStreamingCall<global::address> GetAllAddresses(global::EmptyAddressMessage request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncServerStreamingCall(__Method_GetAllAddresses, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::StringMessageAddress UpdateAddress(global::addressUpdateMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateAddress(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::StringMessageAddress UpdateAddress(global::addressUpdateMessage request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_UpdateAddress, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::StringMessageAddress> UpdateAddressAsync(global::addressUpdateMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateAddressAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::StringMessageAddress> UpdateAddressAsync(global::addressUpdateMessage request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_UpdateAddress, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::address GetAddressByUserId(global::IntReqAddress request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetAddressByUserId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::address GetAddressByUserId(global::IntReqAddress request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetAddressByUserId, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::address> GetAddressByUserIdAsync(global::IntReqAddress request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetAddressByUserIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::address> GetAddressByUserIdAsync(global::IntReqAddress request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetAddressByUserId, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::user RegisterUser(global::loginMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return RegisterUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::user RegisterUser(global::loginMessage request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_RegisterUser, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::user> RegisterUserAsync(global::loginMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return RegisterUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::user> RegisterUserAsync(global::loginMessage request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_RegisterUser, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::StringMessageAddress Login(global::loginMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return Login(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::StringMessageAddress Login(global::loginMessage request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_Login, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::StringMessageAddress> LoginAsync(global::loginMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return LoginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::StringMessageAddress> LoginAsync(global::loginMessage request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_Login, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::user GetUserById(global::IntReqAddress request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetUserById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::user GetUserById(global::IntReqAddress request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetUserById, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::user> GetUserByIdAsync(global::IntReqAddress request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetUserByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::user> GetUserByIdAsync(global::IntReqAddress request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetUserById, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::user GetUserByEmail(global::StringMessageAddress request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetUserByEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::user GetUserByEmail(global::StringMessageAddress request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetUserByEmail, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::user> GetUserByEmailAsync(global::StringMessageAddress request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetUserByEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::user> GetUserByEmailAsync(global::StringMessageAddress request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetUserByEmail, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::user UpdateUser(global::user request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::user UpdateUser(global::user request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_UpdateUser, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::user> UpdateUserAsync(global::user request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return UpdateUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::user> UpdateUserAsync(global::user request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_UpdateUser, null, options, request);
    }
    /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected override AddressAndUserGrpcClient NewInstance(ClientBaseConfiguration configuration)
    {
      return new AddressAndUserGrpcClient(configuration);
    }
  }

  /// <summary>Creates service definition that can be registered with a server</summary>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static grpc::ServerServiceDefinition BindService(AddressAndUserGrpcBase serviceImpl)
  {
    return grpc::ServerServiceDefinition.CreateBuilder()
        .AddMethod(__Method_GetAddressById, serviceImpl.GetAddressById)
        .AddMethod(__Method_CreateAddress, serviceImpl.CreateAddress)
        .AddMethod(__Method_GetAllAddresses, serviceImpl.GetAllAddresses)
        .AddMethod(__Method_UpdateAddress, serviceImpl.UpdateAddress)
        .AddMethod(__Method_GetAddressByUserId, serviceImpl.GetAddressByUserId)
        .AddMethod(__Method_RegisterUser, serviceImpl.RegisterUser)
        .AddMethod(__Method_Login, serviceImpl.Login)
        .AddMethod(__Method_GetUserById, serviceImpl.GetUserById)
        .AddMethod(__Method_GetUserByEmail, serviceImpl.GetUserByEmail)
        .AddMethod(__Method_UpdateUser, serviceImpl.UpdateUser).Build();
  }

  /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
  /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
  /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static void BindService(grpc::ServiceBinderBase serviceBinder, AddressAndUserGrpcBase serviceImpl)
  {
    serviceBinder.AddMethod(__Method_GetAddressById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IntReqAddress, global::address>(serviceImpl.GetAddressById));
    serviceBinder.AddMethod(__Method_CreateAddress, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::address, global::address>(serviceImpl.CreateAddress));
    serviceBinder.AddMethod(__Method_GetAllAddresses, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::EmptyAddressMessage, global::address>(serviceImpl.GetAllAddresses));
    serviceBinder.AddMethod(__Method_UpdateAddress, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::addressUpdateMessage, global::StringMessageAddress>(serviceImpl.UpdateAddress));
    serviceBinder.AddMethod(__Method_GetAddressByUserId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IntReqAddress, global::address>(serviceImpl.GetAddressByUserId));
    serviceBinder.AddMethod(__Method_RegisterUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::loginMessage, global::user>(serviceImpl.RegisterUser));
    serviceBinder.AddMethod(__Method_Login, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::loginMessage, global::StringMessageAddress>(serviceImpl.Login));
    serviceBinder.AddMethod(__Method_GetUserById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IntReqAddress, global::user>(serviceImpl.GetUserById));
    serviceBinder.AddMethod(__Method_GetUserByEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::StringMessageAddress, global::user>(serviceImpl.GetUserByEmail));
    serviceBinder.AddMethod(__Method_UpdateUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::user, global::user>(serviceImpl.UpdateUser));
  }

}
#endregion
