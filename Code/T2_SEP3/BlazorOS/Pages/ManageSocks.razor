@page "/ManageSocks"
@using HttpClients.ClientInterfaces
@using global::Shared.Models
@inject ISockCardService sockService;
@inject NavigationManager _navigationManager;

<h3>ManageSocks</h3>
@if(sockCards ==null){
}
else if (!sockCards.Any())
{
    <p>no sock cards</p>
}
else
{
    <table class="table">
        <thead>
            <th>id</th>
            <th>title</th>
            <th>button1</th>
        <th>button2</th>
        </thead>

        <tbody>
        @foreach (var card in sockCards)
        {
            <tr>
                <td>@card.Id</td>
                <td>@card.Title</td>
                <td><button @onclick="@(()=>Edit(@card.Id))">edit</button></td>
                <td><button @onclick="@(()=>RemoveCardById(@card.Id))">remove</button></td>
               
            </tr>
        }
        </tbody>
    </table>
    <p>@msg</p>
}

@code {
    private ICollection<SocksCard> sockCards=new List<SocksCard>();
    private ICollection<SocksCard> sockCardsLoaded=new List<SocksCard>();
    private string msg = "";

    private async void LoadCards()
    {
        try
        {
           
            sockCardsLoaded = await sockService.GetAllSockCards();
            sockCards = sockCardsLoaded;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw ;
        }
        
    }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            sockCardsLoaded = await sockService.GetAllSockCards();
            sockCards = sockCardsLoaded;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw ;
        }
    }

    private async Task RemoveCardById(int id)
    {
        try
        {
            await sockService.RemoveById(id);
            msg = "card removed succesfully";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
        LoadCards();
       
    }
    public void Edit(int cardId)
    {
        _navigationManager.NavigateTo($"EditSockCard/{cardId}");
    }

    public void Restock(int cardId)
    {
        _navigationManager.NavigateTo($"UpdateInventory/{cardId}");
    }


}