// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/SocksInventoryComunicator.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

public static partial class SocksInventoryGrpc
{
  static readonly string __ServiceName = "SocksInventoryGrpc";

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (message is global::Google.Protobuf.IBufferMessage)
    {
      context.SetPayloadLength(message.CalculateSize());
      global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
      context.Complete();
      return;
    }
    #endif
    context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static class __Helper_MessageCache<T>
  {
    public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (__Helper_MessageCache<T>.IsBufferMessage)
    {
      return parser.ParseFrom(context.PayloadAsReadOnlySequence());
    }
    #endif
    return parser.ParseFrom(context.PayloadAsNewBuffer());
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::inventory> __Marshaller_inventory = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::inventory.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::EmptyInventoryMessage> __Marshaller_EmptyInventoryMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EmptyInventoryMessage.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::IntReqInventory> __Marshaller_IntReqInventory = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntReqInventory.Parser));

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::inventory, global::EmptyInventoryMessage> __Method_create = new grpc::Method<global::inventory, global::EmptyInventoryMessage>(
      grpc::MethodType.Unary,
      __ServiceName,
      "create",
      __Marshaller_inventory,
      __Marshaller_EmptyInventoryMessage);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::EmptyInventoryMessage, global::inventory> __Method_getAll = new grpc::Method<global::EmptyInventoryMessage, global::inventory>(
      grpc::MethodType.ServerStreaming,
      __ServiceName,
      "getAll",
      __Marshaller_EmptyInventoryMessage,
      __Marshaller_inventory);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::IntReqInventory, global::inventory> __Method_getById = new grpc::Method<global::IntReqInventory, global::inventory>(
      grpc::MethodType.Unary,
      __ServiceName,
      "getById",
      __Marshaller_IntReqInventory,
      __Marshaller_inventory);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::IntReqInventory, global::inventory> __Method_getByCardId = new grpc::Method<global::IntReqInventory, global::inventory>(
      grpc::MethodType.ServerStreaming,
      __ServiceName,
      "getByCardId",
      __Marshaller_IntReqInventory,
      __Marshaller_inventory);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::inventory, global::EmptyInventoryMessage> __Method_updateInventory = new grpc::Method<global::inventory, global::EmptyInventoryMessage>(
      grpc::MethodType.Unary,
      __ServiceName,
      "updateInventory",
      __Marshaller_inventory,
      __Marshaller_EmptyInventoryMessage);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::IntReqInventory, global::EmptyInventoryMessage> __Method_deleteByCardId = new grpc::Method<global::IntReqInventory, global::EmptyInventoryMessage>(
      grpc::MethodType.Unary,
      __ServiceName,
      "deleteByCardId",
      __Marshaller_IntReqInventory,
      __Marshaller_EmptyInventoryMessage);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::IntReqInventory, global::EmptyInventoryMessage> __Method_deleteById = new grpc::Method<global::IntReqInventory, global::EmptyInventoryMessage>(
      grpc::MethodType.Unary,
      __ServiceName,
      "deleteById",
      __Marshaller_IntReqInventory,
      __Marshaller_EmptyInventoryMessage);

  /// <summary>Service descriptor</summary>
  public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
  {
    get { return global::SocksInventoryComunicatorReflection.Descriptor.Services[0]; }
  }

  /// <summary>Base class for server-side implementations of SocksInventoryGrpc</summary>
  [grpc::BindServiceMethod(typeof(SocksInventoryGrpc), "BindService")]
  public abstract partial class SocksInventoryGrpcBase
  {
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::EmptyInventoryMessage> create(global::inventory request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task getAll(global::EmptyInventoryMessage request, grpc::IServerStreamWriter<global::inventory> responseStream, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::inventory> getById(global::IntReqInventory request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task getByCardId(global::IntReqInventory request, grpc::IServerStreamWriter<global::inventory> responseStream, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::EmptyInventoryMessage> updateInventory(global::inventory request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::EmptyInventoryMessage> deleteByCardId(global::IntReqInventory request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::EmptyInventoryMessage> deleteById(global::IntReqInventory request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

  }

  /// <summary>Client for SocksInventoryGrpc</summary>
  public partial class SocksInventoryGrpcClient : grpc::ClientBase<SocksInventoryGrpcClient>
  {
    /// <summary>Creates a new client for SocksInventoryGrpc</summary>
    /// <param name="channel">The channel to use to make remote calls.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public SocksInventoryGrpcClient(grpc::ChannelBase channel) : base(channel)
    {
    }
    /// <summary>Creates a new client for SocksInventoryGrpc that uses a custom <c>CallInvoker</c>.</summary>
    /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public SocksInventoryGrpcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
    {
    }
    /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected SocksInventoryGrpcClient() : base()
    {
    }
    /// <summary>Protected constructor to allow creation of configured clients.</summary>
    /// <param name="configuration">The client configuration.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected SocksInventoryGrpcClient(ClientBaseConfiguration configuration) : base(configuration)
    {
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::EmptyInventoryMessage create(global::inventory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return create(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::EmptyInventoryMessage create(global::inventory request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_create, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::EmptyInventoryMessage> createAsync(global::inventory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return createAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::EmptyInventoryMessage> createAsync(global::inventory request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_create, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncServerStreamingCall<global::inventory> getAll(global::EmptyInventoryMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return getAll(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncServerStreamingCall<global::inventory> getAll(global::EmptyInventoryMessage request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncServerStreamingCall(__Method_getAll, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::inventory getById(global::IntReqInventory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return getById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::inventory getById(global::IntReqInventory request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_getById, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::inventory> getByIdAsync(global::IntReqInventory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return getByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::inventory> getByIdAsync(global::IntReqInventory request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_getById, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncServerStreamingCall<global::inventory> getByCardId(global::IntReqInventory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return getByCardId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncServerStreamingCall<global::inventory> getByCardId(global::IntReqInventory request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncServerStreamingCall(__Method_getByCardId, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::EmptyInventoryMessage updateInventory(global::inventory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return updateInventory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::EmptyInventoryMessage updateInventory(global::inventory request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_updateInventory, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::EmptyInventoryMessage> updateInventoryAsync(global::inventory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return updateInventoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::EmptyInventoryMessage> updateInventoryAsync(global::inventory request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_updateInventory, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::EmptyInventoryMessage deleteByCardId(global::IntReqInventory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return deleteByCardId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::EmptyInventoryMessage deleteByCardId(global::IntReqInventory request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_deleteByCardId, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::EmptyInventoryMessage> deleteByCardIdAsync(global::IntReqInventory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return deleteByCardIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::EmptyInventoryMessage> deleteByCardIdAsync(global::IntReqInventory request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_deleteByCardId, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::EmptyInventoryMessage deleteById(global::IntReqInventory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return deleteById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::EmptyInventoryMessage deleteById(global::IntReqInventory request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_deleteById, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::EmptyInventoryMessage> deleteByIdAsync(global::IntReqInventory request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return deleteByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::EmptyInventoryMessage> deleteByIdAsync(global::IntReqInventory request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_deleteById, null, options, request);
    }
    /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected override SocksInventoryGrpcClient NewInstance(ClientBaseConfiguration configuration)
    {
      return new SocksInventoryGrpcClient(configuration);
    }
  }

  /// <summary>Creates service definition that can be registered with a server</summary>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static grpc::ServerServiceDefinition BindService(SocksInventoryGrpcBase serviceImpl)
  {
    return grpc::ServerServiceDefinition.CreateBuilder()
        .AddMethod(__Method_create, serviceImpl.create)
        .AddMethod(__Method_getAll, serviceImpl.getAll)
        .AddMethod(__Method_getById, serviceImpl.getById)
        .AddMethod(__Method_getByCardId, serviceImpl.getByCardId)
        .AddMethod(__Method_updateInventory, serviceImpl.updateInventory)
        .AddMethod(__Method_deleteByCardId, serviceImpl.deleteByCardId)
        .AddMethod(__Method_deleteById, serviceImpl.deleteById).Build();
  }

  /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
  /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
  /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static void BindService(grpc::ServiceBinderBase serviceBinder, SocksInventoryGrpcBase serviceImpl)
  {
    serviceBinder.AddMethod(__Method_create, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::inventory, global::EmptyInventoryMessage>(serviceImpl.create));
    serviceBinder.AddMethod(__Method_getAll, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::EmptyInventoryMessage, global::inventory>(serviceImpl.getAll));
    serviceBinder.AddMethod(__Method_getById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IntReqInventory, global::inventory>(serviceImpl.getById));
    serviceBinder.AddMethod(__Method_getByCardId, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::IntReqInventory, global::inventory>(serviceImpl.getByCardId));
    serviceBinder.AddMethod(__Method_updateInventory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::inventory, global::EmptyInventoryMessage>(serviceImpl.updateInventory));
    serviceBinder.AddMethod(__Method_deleteByCardId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IntReqInventory, global::EmptyInventoryMessage>(serviceImpl.deleteByCardId));
    serviceBinder.AddMethod(__Method_deleteById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IntReqInventory, global::EmptyInventoryMessage>(serviceImpl.deleteById));
  }

}
#endregion
